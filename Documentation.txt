ReadFile.asm |
_____________|

openFileReadOnly
# description: opens an intended file
# input:
# - $a0: address of null-terminated string of filepath (relative to MARS location)
# output:
# - $v0: file descriptor, or -1 if error

getRandWord
# description: get a random word from a given file
# input:
# - $a0: file descriptor
# - $a1: amount of words in the file
# ouput:
# - $v0: address of a 5-word character (null-terminated)

closeFile
# description: close a file descriptor
# input:
# - $a0: file descriptor
# ouput:
# - None

--------------------------------------------------------------------------------------------------------------------
CheckWord.asm |
______________|

checkWord
# description: check for correct position, wrong position, and not in word
# input:
# - $a0: address of null-terminated string length 5 for input word
# - $a1: address of null-terminated string length 5 for correct word
# ouput:
# - $v0: address of result indicator
# Note: result indicator is a string length 5 with these characters:
# - ^ means right position
# - * means wrong position
# - X means not in word

--------------------------------------------------------------------------------------------------------------------
IO_Bitmap.asm |
______________|

# Note: must do this before any subroutine can be used:
# datas for bitmap display
# Note:
# Tools -> Bitmap Display
#
# In Bitmap Display extension, set:
# - Unit Width/Height in Pixels to 16 (or 8).
# - Display Width in Pixels to 1024 (or 512), Display Height in Pixels to 512 (or 256)
# - Base address for display to 0x10040000 (heap).
# And then press "Reset" then press "Connect to MIPS" before doing anything
# Note: Please run function allocateBitmapHeapMemory first thing before using any additional heap memory
# since bitmap display extension is set to such that its memory for DMA is the first address in the heap.

allocateBitmapBuffer
# description: allocate space for 1024x512 bitmap canvas with each unit square is 16 pixel x 16 pixel
# input:
# - None
# output:
# - $v0: address of first byte of heap memory allocated
# Note: Please run function allocateBitmapHeapMemory first thing before using any additional heap memory
# since bitmap display extension is set to such that its memory for DMA is.

blacken:
# description: change the whole canvas to black
# Input:
# - $a0: starting location
# Output:
# - None

drawChar
# description: draw a character onto the canvas with the given inputs
# input:
# - $a0: ascii code of char (must be between A (65 or 0x41) and Z (90 or 0x5a) + 91 for blank)
# - $a1: starting address of bitmap buffer
# - $a2: square number (between 0 and 19)
# - $a3: color code (right, wrong, none, pre)
# output:
# - None

color labels
# right: for correct position, green
# wrong: for wrong position, yellow
# none:  for not in word, grey
# pre:   before checking, white
